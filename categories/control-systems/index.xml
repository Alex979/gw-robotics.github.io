<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Control Systems on GW Robotics</title>
    <link>https://gw-robotics.github.io/categories/control-systems/</link>
    <description>Recent content in Control Systems on GW Robotics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017, GW Robotics; all rights reserved.</copyright>
    <lastBuildDate>Tue, 08 Nov 2016 14:37:34 +0000</lastBuildDate>
    
	<atom:link href="https://gw-robotics.github.io/categories/control-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HOW-TO: OpenCV Installation (Windows)</title>
      <link>https://gw-robotics.github.io/blog/2016/11/08/how-to-opencv-installation-windows/</link>
      <pubDate>Tue, 08 Nov 2016 14:37:34 +0000</pubDate>
      
      <guid>https://gw-robotics.github.io/blog/2016/11/08/how-to-opencv-installation-windows/</guid>
      <description>This tutorial is for installation of OpenCV for Python on a Windows PC from prebuilt files. A fully detailed tutorial can be found at the OpenCV documentation.
To Install OpenCV and Dependencies First, make sure that your computer has the right Python setup with Numpy. Matplotlib is optional and is mostly for use with the tutorials. You can check that you have Python 2.7.whatever using:
python -V  After verifying that you have Python 2.</description>
    </item>
    
    <item>
      <title>HOW-TO: Arduino with Raspberry Pi</title>
      <link>https://gw-robotics.github.io/blog/2016/10/29/how-to-arduino-with-raspberry-pi/</link>
      <pubDate>Sat, 29 Oct 2016 02:04:04 +0000</pubDate>
      
      <guid>https://gw-robotics.github.io/blog/2016/10/29/how-to-arduino-with-raspberry-pi/</guid>
      <description>The 2017 robot will be interacting between the Arduino (for sensor reading and PWM output) and the Raspberry Pi through a Python module called Nanpy. The purpose of this how-to is for basic setup and usage that may not be completely obvious from Nanpy&amp;rsquo;s official documentation. We will be using repositories from the GW Robotics organisation as a way to standardise everyone&amp;rsquo;s code bases.
Arduino Setup Please note, this is only necessary if the Arduino does not already have the Nanpy firmware compiled on it.</description>
    </item>
    
    <item>
      <title>Testing Arduino-Raspberry Pi Serial Comms</title>
      <link>https://gw-robotics.github.io/blog/2016/10/26/testing-arduino-raspberry-pi-serial-comms/</link>
      <pubDate>Wed, 26 Oct 2016 02:15:43 +0000</pubDate>
      
      <guid>https://gw-robotics.github.io/blog/2016/10/26/testing-arduino-raspberry-pi-serial-comms/</guid>
      <description>Tonight, Nam went through a tutorial on communicating via a USB cable between an Arduino and a Raspberry Pi. Here are a few things to note: - The tutorial did not mention the need to download PySerial. This was done via pip. - The Arduino sketch was compiled via a computer, and then the Arduino was connected to the Raspberry Pi. - The Raspberry Pi python program was written using Nano.</description>
    </item>
    
    <item>
      <title>First Software Meeting Summary</title>
      <link>https://gw-robotics.github.io/blog/2016/10/15/first-software-meeting-summary/</link>
      <pubDate>Sat, 15 Oct 2016 00:36:01 +0000</pubDate>
      
      <guid>https://gw-robotics.github.io/blog/2016/10/15/first-software-meeting-summary/</guid>
      <description>Today was the first software team meeting! As there is no finalised robot design, there was not much to talk about code-wise. Instead, points discussed during the GroupMe chat was just reiterated. They are as follows:
 Using Python on a Raspberry Pi to do most of the logic Using C/Arduino on an Arduino to get sensor input and output to motor controllers Arduino and Raspberry Pi will communicate through Serial protocols GitHub and Git will be used to manage the code The programming projects are as follows:  Driving Vision Baby grabbing mechanism Fire Extinguisher Mapping    The goal for the next programming meeting is to have more members, as well as start talking about pseudo-code.</description>
    </item>
    
  </channel>
</rss>